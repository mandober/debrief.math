# Relation theory ‚à∑ Types of relations

* A - property of being an element in set A
* R - property of being an element in set R
* P - generic property of relations
* ùëπ - reflexive property
* I - reflexive property


Refl
IRefl
CoRef
QRefl

Px


```js
A¬≤ = A‚Åü‚®Ø‚ÅüA = { (a,b) | ‚àÄa ‚àà A, ‚àÄb ‚àà A }
A¬≤ = A‚Åü‚®Ø‚ÅüA = { (a,b) | ‚àÄa‚àÄb((a ‚àà A ‚ãÄ b ‚àà A) -> (a,b) ‚àà A¬≤) }
R = { (a,b) | a,b ‚àà A }     A¬≤ = A‚®ØA      R ‚äÜ A‚®ØA     R ‚àà ùìü(A‚®ØA)
E = ‚àÖ  ‚äÜ A‚®ØA     U = A¬≤ ‚äÜ A‚®ØA      R ‚äÜ A‚®ØA
abc ‚àà A   or    ‚àÄa,b,c ‚àà A?
```

## Relations

A relation `R` on a set `A`, `R ‚äÜ A‚®ØA` or `R ‚àà ùìü(A‚®ØA)`, is ...

* REFL               reflexive:  ‚àÄa(a ‚àà A -> (a,a) ‚àà R)            ‚úî
* IREF             irreflexive:  ‚àÄa(a ‚àà A -> (a,a) ‚àâ R)            ‚úî

* SYMM               symmetric:  aRb ‚ü∫  bRa
* ASYM              asymmetric:  aRb ‚ü∫ ¬¨bRa
* NSYM           antisymmetric:  (aRb ‚ãÄ bRa) -> a‚Åü=‚Åüb

* TRAN              transitive:  (aRb ‚ãÄ bRc) ->  aRc
* ATRA          antitransitive:  (aRb ‚ãÄ bRc) -> ¬¨aRc
* NTRA           nontransitive:  (aRb ‚ãÄ bRc) -> (aRc ‚ãÅ ¬¨aRc)
                                 (aRb ‚ãÄ bRc) -> ((a,c) ‚àà?‚àâ? R)

* COREF            coreflexive: aRb -> a‚Åü=‚Åüb

* QREF         quasi-reflexive: (aRb ‚ãÄ a ‚â† b) -> (aRa ‚ãÄ bRb)
* QR‚àôL    left quasi-reflexive: (aRb ‚ãÄ a ‚â† b) -> aRa
* QR‚àôR   right quasi-reflexive: (aRb ‚ãÄ a ‚â† b) -> bRb

* QTRA        quasi-transitive: (aRb ‚ãÄ ¬¨bRa) ‚ãÄ (bRc ‚ãÄ ¬¨cRb) -> (aRc ‚ãÄ ¬¨cRa)

* SCONN     strongly-connected: ‚àÄa,b ‚àà A. aRb ‚ãÅ bRa                 ‚úî
* CONN         connected/total: a‚Åü‚â†‚Åüb -> (aRb ‚ãÅ bRa)
  TOTAL                         aRb ‚ãÅ bRa ‚ãÅ a‚Åü‚â†‚Åüb

* TOTAL            right-total: ‚àÄa(a ‚àà A -> ‚àÉb(b ‚àà A ‚ãÄ aRb))
  SERI                  serial:
* TOT‚àôR
* TOT‚àôL


* UNQ‚àôL            left-unique: ‚àÄabx ‚àà A. aRx ‚ãÄ bRx ---> a‚Åü=‚Åüb
  FUNC              functional: ‚àÄab  ‚àà A. (f a = f b) -> a‚Åü=‚Åüb
* UNQ‚àôR           right-unique:
* UNIQ                  unique:


REFL ‚äï IREF are opposites, a rel is REFL ‚äï IREF
SYMM ‚äï ASYM are opposites
TRAN ‚äï NTRA are opposites


## Left and right pairs

```js
QREF    QTRA      TOTAL
QR‚àôL    QTR‚àôL     TOT‚àôL
QR‚àôR    QTR‚àôR     TOT‚àôR
```

## More types of binary relations

- Euclideanness
- Density
- Connex and semi-connex relations
- Seriality
- Uniqueness
- Semi-order property 1
- Semi-order property 2

## Special types of binary relations

* Uniqueness properties
  - Injective (left-unique)
  - Functional (right-unique, right-definite, univalent):
  - one-to-one
  - one-to-many
  - many-to-one
  - many-to-many

One-to-one: injective and functional
Many-to-one: functional and not injective
Many-to-many: not injective nor functional

* Totality properties (definable if domain and codomain are specified):
  - Serial (left-total)
  - Surjective (right-total or onto)

* Uniqueness and totality properties (definable if dom and cod are specified):
  - A function: a binary relation that is functional and serial.
  - An injection: a function that is injective
  - A surjection: a function that is surjective
  - A bijection: a function that is injective and surjective

* If relations over proper classes are allowed:
  - Set-like (or local)

* Orders
  - partial order: reflexive + antisymmetric + transitive
  - strict partial order: irreflexive + antisymmetric + transitive
  - total order: reflexive + antisymmetric + transitive + connected
  - strict total order: irreflexive + antisymmetric + transitive + connected
  - equivalence relation: reflexive + symmetric + transitive

* Homogeneous relation over a set X may be subjected closure operations:
  - Reflexive closure
    the (unique) reflexive relation over X containing R,
  - Transitive closure
    the smallest transitive relation over X containing R,
  - Equivalence closure
    the smallest equivalence relation over X containing R.


## Other Types of Relations
- One to One Relations
- One to Many Relations
- Many to One Relation
- Many to Many Relation

One to One Relations
A relation is said to be a One to One relation if all the distinct elements of one set are mapped to distinct elements of another set.

One to One Relations:
One to Many Relations
A relation is said to be One to Many relations if the same element of one set is mapped to another set's more than one element.

One to Many Relations:
Many to One Relation
A relation is said to be Many to One relation if all the distinct elements of one set are mapped to the same element of another set.

Many to One Relation:
Many to Many Relation
A relation is said to be Many to Many relations if one or more than one element is mapped with the same element of another set.
